<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue" />

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>
    <!-- write logs to file  -->
    <!--<target xsi:type="File" name="allfile" fileName="${currentdir}\Logs\SystemLogs\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    --><!-- another file log, only own logs. Uses some ASP.NET core renderers --><!--
    <target xsi:type="File" name="ownFile-web" fileName="${currentdir}\Logs\AppLogs\${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}URL: ${aspnet-request-url} ${newline}ACTION: ${aspnet-mvc-action} ${newline}Exception: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />-->
    <!--<target name="logfile" xsi:type="File" fileName="${currentdir}\Logs\SystemLogs\${shortdate}.log" />-->
    
    <target name="traceFile" xsi:type="File" fileName="${basedir}/Logs/WebAPI/Trace/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline} APPID: ${event-context:item=AppID} ${newline} ProcessID: ${event-context:item=ProcessID} ${newline} MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

    <target name="debugFile" xsi:type="File" fileName="${basedir}/Logs/WebAPI/Debug/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}APPID: ${event-context:item=AppID} ${newline}ProcessID: ${event-context:item=ProcessID} ${newline}MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

    <target name="errorFile" xsi:type="File" fileName="${basedir}/Logs/WebAPI/Error/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}APPID: ${event-context:item=AppID} ${newline}ProcessID: ${event-context:item=ProcessID} ${newline}MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

    
    
    
    <!--Plugin loggin-->

    <target name="traceFilePlugin" xsi:type="File" fileName="${basedir}/Logs/Plugin/Trace/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}APPID: ${event-context:item=AppID} ${newline}ProcessID: ${event-context:item=ProcessID} ${newline}MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

    <target name="debugFilePlugin" xsi:type="File" fileName="${basedir}/Logs/Plugin/Debug/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}APPID: ${event-context:item=AppID} ${newline}ProcessID: ${event-context:item=ProcessID} ${newline}MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

    <target name="errorFilePlugin" xsi:type="File" fileName="${basedir}/Logs/Plugin/Error/${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${newline}LOGGER:${logger}${newline}MESSAGE: ${message} ${newline}APPID: ${event-context:item=AppID} ${newline}ProcessID: ${event-context:item=ProcessID} ${newline}MethodName: ${event-context:item=MethodName} ${newline}EXCEPTION: ${exception:format=tostring} ${newline} __________________________________ ${newline}" />

  
  
  
   
  </targets>

  <rules>
    <!--All logs, including from Microsoft-->

    <logger name="*" minlevel="Trace" writeTo="traceFile">
      <filters>
        <when condition="contains('${event-context:item=AppID}','PLUGIN')" action="Ignore"></when>
      </filters>
    </logger>
    <logger name="*" maxlevel="Debug" writeTo="debugFile" enabled="true">
      <filters>
        <when condition="contains('${event-context:item=AppID}','PLUGIN')" action="Ignore"></when>
      </filters>
    </logger>
    <logger name="*" minlevel="Error" writeTo="errorFile">
      <filters>
        <when condition="contains('${event-context:item=AppID}','PLUGIN')" action="Ignore"></when>
      </filters>
    </logger>

    <logger name="*" minlevel="Fatal" writeTo="fatalFile">
      <filters>
        <when condition="contains('${event-context:item=AppID}','PLUGIN')" action="Ignore"></when>
      </filters>
    </logger> 

<!--Plugin-->

    <logger name="*" minlevel="Trace" writeTo="traceFilePlugin">
      <filters>
        <when condition="contains('${event-context:item=AppID}','WEBAPI')" action="Ignore"></when>
      </filters>
    </logger>

    <logger name="*" maxlevel="Debug" writeTo="debugFilePlugin" enabled="true">
      <filters>
        <when condition="contains('${event-context:item=AppID}','WEBAPI')" action="Ignore"></when>
      </filters>
    </logger>
    <logger name="*" minlevel="Error" writeTo="errorFilePlugin">
      <filters>
        <when condition="contains('${event-context:item=AppID}','WEBAPI')" action="Ignore"></when>
      </filters>
    </logger>
    <logger name="*" minlevel="Fatal" writeTo="fatalFilePlugin">
      <filters>
        <when condition="contains('${event-context:item=AppID}','WEBAPI')" action="Ignore"></when>
      </filters>
    </logger>
    
    
    
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  </rules>
</nlog>